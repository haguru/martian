// Code generated by mockery v2.10.1. DO NOT EDIT.

package mocks

import (
	redis "github.com/gomodule/redigo/redis"
	mock "github.com/stretchr/testify/mock"
)

// RedisClientInterface is an autogenerated mock type for the RedisClientInterface type
type RedisClientInterface struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *RedisClientInterface) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetConnection provides a mock function with given fields:
func (_m *RedisClientInterface) GetConnection() redis.Conn {
	ret := _m.Called()

	var r0 redis.Conn
	if rf, ok := ret.Get(0).(func() redis.Conn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(redis.Conn)
		}
	}

	return r0
}

// TestConnection provides a mock function with given fields:
func (_m *RedisClientInterface) TestConnection() (redis.Conn, error) {
	ret := _m.Called()

	var r0 redis.Conn
	if rf, ok := ret.Get(0).(func() redis.Conn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(redis.Conn)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
